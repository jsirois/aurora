/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

if (gradle.gradleVersion != GRADLE_VERSION) {
  throw new GradleException("Building is only supported with gradle version: $GRADLE_VERSION .")
}

def minJavaVersion = JavaVersion.VERSION_1_8;

compileJava {
  sourceCompatibility = minJavaVersion
  targetCompatibility = minJavaVersion
}

repositories {
  mavenCentral()
}

dependencies {
  // TODO(John Sirois): Should not need this dep - its implicit; however the java code in buildSrc
  // is getting re-compiled in later - non bootstrap - phases that don't apply the implicits like
  // the gradle core does.  Track down and squash this second compile... maybe.  It may be the only
  // way to add tests of the custom task?.
  compile gradleApi()

  compile "com.google.guava:guava:18.0"

  compile subprojects.findAll { it.getTasksByName("jar", false) }
}

subprojects {
  apply plugin: 'java'

  compileJava {
    sourceCompatibility = minJavaVersion
    targetCompatibility = minJavaVersion
  }

  repositories {
    mavenCentral()
  }

  dependencies {
    compile "com.facebook.swift:swift-annotations:0.17.0"
    compile "com.facebook.swift:swift-codec:0.17.0"
    compile "com.facebook.swift:swift-idl-parser:0.17.0"
    compile "com.google.auto.value:auto-value:1.1"
    compile "com.google.guava:guava:18.0"
    compile "com.squareup:javapoet:1.4.0"
    compile "org.apache.thrift:libthrift:0.9.1"
    compile "org.immutables:value:2.1.0"
    compile "org.slf4j:slf4j-jdk14:1.7.12"
  }

  rootProject.dependencies {
    compile project(path)
  }
}